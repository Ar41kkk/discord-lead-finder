import streamlit as st
import time
import yaml
from pathlib import Path
from ..config_utils import load_config, save_config

from dashboard.bot_utils import get_status, start_bot, stop_bot


def display_page(config_path: Path):
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤–∫–ª–∞–¥–∫—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑ —Ñ—É–Ω–∫—Ü—ñ—î—é –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –±–æ—Ç—ñ–≤."""
    st.header("‚öôÔ∏è –†–µ–¥–∞–∫—Ç–æ—Ä –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó", divider='rainbow')

    config_data = load_config(config_path)
    if config_data is None:
        return

    tab_main, tab_ai, tab_discord, tab_advanced = st.tabs([
        "üîë –ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞", "üß† AI", "üí¨ Discord", "üõ†Ô∏è –†–æ–∑—à–∏—Ä–µ–Ω—ñ"
    ])

    with st.form(key="config_form"):
        # --- –ö–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ ---
        with tab_main:
            st.subheader("–°–ª–æ–≤–∞-—Ç—Ä–∏–≥–µ—Ä–∏")
            keywords_str = "\n".join(config_data.get('keywords', []))
            edited_keywords = st.text_area(
                "–ö–æ–∂–Ω–µ —Å–ª–æ–≤–æ/—Ñ—Ä–∞–∑—É –∑ –Ω–æ–≤–æ–≥–æ —Ä—è–¥–∫–∞",
                value=keywords_str,
                height=300,
                key="keywords_area"
            )

        # --- AI –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
        with tab_ai:
            s1 = config_data.get('openai', {}).get('stage_one', {})
            s2 = config_data.get('openai', {}).get('stage_two', {})

            st.subheader("–ï—Ç–∞–ø 1 (Stage One)")
            edited_s1_model = st.text_input(
                "–ú–æ–¥–µ–ª—å AI (Stage One)",
                value=s1.get('model', 'gpt-3.5-turbo'),
                key="s1_model"
            )
            edited_s1_prompt = st.text_area(
                "–ü—Ä–æ–º–ø—Ç AI (Stage One)",
                value=s1.get('system_prompt', ''),
                height=200,
                key="s1_prompt"
            )

            st.divider()
            st.subheader("–ï—Ç–∞–ø 2 (Stage Two)")
            edited_s2_model = st.text_input(
                "–ú–æ–¥–µ–ª—å AI (Stage Two)",
                value=s2.get('model', 'gpt-4o-mini'),
                key="s2_model"
            )
            edited_s2_prompt = st.text_area(
                "–ü—Ä–æ–º–ø—Ç AI (Stage Two)",
                value=s2.get('system_prompt', ''),
                height=200,
                key="s2_prompt"
            )

        # --- Discord –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
        with tab_discord:
            discord_cfg = config_data.get('discord', {})
            st.subheader("Discord: —Ç—Ä–µ–∫—ñ–Ω–≥ –∫–∞–Ω–∞–ª—ñ–≤")
            edited_track_all = st.toggle(
                "–¢—Ä–µ–∫–∞—Ç–∏ –≤—Å—ñ –∫–∞–Ω–∞–ª–∏?",
                value=discord_cfg.get('track_all_channels', True),
                key="track_all_toggle"
            )
            whitelist_str = "\n".join(map(str, discord_cfg.get('channel_whitelist', [])))
            edited_whitelist = st.text_area(
                "–ë—ñ–ª–∏–π —Å–ø–∏—Å–æ–∫ ID –∫–∞–Ω–∞–ª—ñ–≤",
                value=whitelist_str,
                height=150,
                key="whitelist_area"
            )

        # --- –Ü–Ω—à—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è ---
        with tab_advanced:
            st.subheader("–Ü–Ω—à—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏")
            edited_days = st.number_input(
                "–ì–ª–∏–±–∏–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—ó (–¥–Ω—ñ–≤)",
                value=config_data.get('history_days', 7),
                min_value=1,
                key="history_days_input"
            )
            levels = ['DEBUG', 'INFO', 'WARNING', 'ERROR', 'CRITICAL']
            edited_level = st.selectbox(
                "–†—ñ–≤–µ–Ω—å –ª–æ–≥—ñ–≤",
                options=levels,
                index=levels.index(config_data.get('log_level', 'INFO')),
                key="log_level_select"
            )

        st.divider()
        submitted = st.form_submit_button("üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ —Ç–∞ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ –±–æ—Ç–∏")


    if not submitted:
        return

    # –ó–±–∏—Ä–∞—î–º–æ –π –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    updated = config_data.copy()
    updated['keywords'] = [w.strip() for w in edited_keywords.splitlines() if w.strip()]

    updated.setdefault('openai', {}).setdefault('stage_one', {})['model'] = edited_s1_model
    updated['openai']['stage_one']['system_prompt'] = edited_s1_prompt
    updated.setdefault('openai', {}).setdefault('stage_two', {})['model'] = edited_s2_model
    updated['openai']['stage_two']['system_prompt'] = edited_s2_prompt

    updated.setdefault('discord', {})['track_all_channels'] = edited_track_all
    updated['discord']['channel_whitelist'] = [
        int(x.strip()) for x in edited_whitelist.splitlines() if x.strip()
    ]

    updated['history_days'] = edited_days
    updated['log_level'] = edited_level

    if save_config(config_path, updated):
        st.success("–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –∑–±–µ—Ä–µ–∂–µ–Ω–æ!")
    else:
        st.error("–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–±–µ—Ä–µ–≥—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é.")
        return

    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ —Ç—ñ –±–æ—Ç–∏, —â–æ –∑–∞—Ä–∞–∑ Running
    with st.spinner("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç—ñ–≤..."):
        cnt = 0
        for acc in updated.get('discord', {}).get('accounts', []):
            name = acc.get('name')
            if name and get_status(name) == "Running":
                stop_bot(name)
                time.sleep(1)
                start_bot(name)
                time.sleep(1)
                cnt += 1

    if cnt:
        st.success(f"–ü–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–æ {cnt} –±–æ—Ç(—ñ–≤).")
    else:
        st.info("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∑–∞–ø—É—â–µ–Ω–∏—Ö –±–æ—Ç—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É.")
