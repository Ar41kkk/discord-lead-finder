# src/dashboard/pages/tab_lead_funnel.py

import streamlit as st
from ..constants import AI_QUALIFIED_STATUSES, MANUAL_APPROVED_STATUS


def display_tab(df):
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤–∫–ª–∞–¥–∫—É –∞–Ω–∞–ª—ñ–∑—É –≤–æ—Ä–æ–Ω–∫–∏ –ª—ñ–¥—ñ–≤ —É –≤–∏–≥–ª—è–¥—ñ –ø–æ–∫—Ä–æ–∫–æ–≤–∏—Ö –º–µ—Ç—Ä–∏–∫."""
    st.header("üéØ –ê–Ω–∞–ª—ñ–∑ –í–æ—Ä–æ–Ω–∫–∏ –õ—ñ–¥—ñ–≤")

    if df.empty:
        st.info("–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É –∑–∞ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.")
        return

    # --- 1. –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ—Ç–∞–ø—É –≤–æ—Ä–æ–Ω–∫–∏ ---

    # –ï—Ç–∞–ø 1: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ –º—ñ—Å—Ç—è—Ç—å –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞
    triggered_df = df[df['keyword_trigger'].notna()].copy()
    triggered_count = len(triggered_df)

    # –ï—Ç–∞–ø 2: –ü—Ä–æ–π—à–ª–∏ –ø–µ—Ä—à–∏–π –µ—Ç–∞–ø AI (–Ω–µ –≤—ñ–¥—Å—ñ—è–Ω—ñ —è–∫ "JUNK")
    if not triggered_df.empty:
        passed_s1_df = triggered_df[triggered_df['ai_stage_one_status'] != 'UNRELEVANT']
        passed_s1_count = len(passed_s1_df)
    else:
        passed_s1_df = triggered_df
        passed_s1_count = 0

    # –ï—Ç–∞–ø 3: –ö–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω—ñ –¥—Ä—É–≥–∏–º –µ—Ç–∞–ø–æ–º AI
    if not passed_s1_df.empty:
        passed_s2_df = passed_s1_df[passed_s1_df['ai_stage_two_status'].isin(AI_QUALIFIED_STATUSES)]
        passed_s2_count = len(passed_s2_df)
    else:
        passed_s2_df = passed_s1_df
        passed_s2_count = 0

    # –ï—Ç–∞–ø 4: –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –≤—Ä—É—á–Ω—É
    if not passed_s2_df.empty:
        manual_approved_count = len(passed_s2_df[passed_s2_df['manual_status'] == MANUAL_APPROVED_STATUS])
    else:
        manual_approved_count = 0

    # --- 2. –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å—ñ—ó –º—ñ–∂ –µ—Ç–∞–ø–∞–º–∏ ---

    conv_s1 = (passed_s1_count / triggered_count * 100) if triggered_count > 0 else 0
    conv_s2 = (passed_s2_count / passed_s1_count * 100) if passed_s1_count > 0 else 0
    conv_manual = (manual_approved_count / passed_s2_count * 100) if passed_s2_count > 0 else 0

    # --- 3. –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –Ω–æ–≤—É –≤–æ—Ä–æ–Ω–∫—É —É –≤–∏–≥–ª—è–¥—ñ –∫–æ–ª–æ–Ω–æ–∫ ---

    st.subheader("–ü–æ–∫—Ä–æ–∫–æ–≤–∞ –í–æ—Ä–æ–Ω–∫–∞ –ö–æ–Ω–≤–µ—Ä—Å—ñ—ó")

    col1, col2, col3, col4 = st.columns(4)

    with col1:
        st.metric(
            label="1. –°–ø—Ä–∞—Ü—é–≤–∞–ª–æ –∑–∞ –∫–ª—é—á–µ–º",
            value=triggered_count
        )

    with col2:
        st.metric(
            label="2. –ü—Ä–æ–π—à–ª–∏ AI –§—ñ–ª—å—Ç—Ä (–ï—Ç–∞–ø 1)",
            value=passed_s1_count,
            delta=f"{conv_s1:.1f}% –ø—Ä–æ—Ö–æ–¥—è—Ç—å",
            help="–í—ñ–¥—Å–æ—Ç–æ–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å, —è–∫—ñ –Ω–µ –±—É–ª–∏ –≤—ñ–¥—Å—ñ—è–Ω—ñ –ø–µ—Ä—à–∏–º –µ—Ç–∞–ø–æ–º AI —è–∫ 'JUNK'."
        )

    with col3:
        st.metric(
            label="3. –ö–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–æ AI (–ï—Ç–∞–ø 2)",
            value=passed_s2_count,
            delta=f"{conv_s2:.1f}% –ø—Ä–æ—Ö–æ–¥—è—Ç—å",
            help="–í—ñ–¥—Å–æ—Ç–æ–∫ –ª—ñ–¥—ñ–≤, —è–∫—ñ –ø—ñ—Å–ª—è –≥–ª–∏–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É –±—É–ª–∏ –≤–∏–∑–Ω–∞–Ω—ñ —è–∫—ñ—Å–Ω–∏–º–∏."
        )

    with col4:
        st.metric(
            label="4. –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –í—Ä—É—á–Ω—É",
            value=manual_approved_count,
            delta=f"{conv_manual:.1f}% –ø—Ä–æ—Ö–æ–¥—è—Ç—å",
            help="–í—ñ–¥—Å–æ—Ç–æ–∫ —è–∫—ñ—Å–Ω–∏—Ö AI-–ª—ñ–¥—ñ–≤, —è–∫—ñ –≤–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏."
        )