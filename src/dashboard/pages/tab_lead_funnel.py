# src/dashboard/pages/tab_lead_funnel.py

import streamlit as st
import plotly.graph_objects as go
from ..constants import AI_QUALIFIED_STATUSES, MANUAL_APPROVED_STATUS # <-- –ù–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç

def display_tab(df):
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤–∫–ª–∞–¥–∫—É –∞–Ω–∞–ª—ñ–∑—É –≤–æ—Ä–æ–Ω–∫–∏ –ª—ñ–¥—ñ–≤."""
    st.header("üéØ –ê–Ω–∞–ª—ñ–∑ –í–æ—Ä–æ–Ω–∫–∏ –õ—ñ–¥—ñ–≤")

    # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏
    total_opportunities = len(df)
    ai_qualified_df = df[df['ai_status'].isin(AI_QUALIFIED_STATUSES)]
    manual_approved_df = ai_qualified_df[ai_qualified_df['manual_status'] == MANUAL_APPROVED_STATUS]

    fig_funnel = go.Figure(go.Funnel(
        y=["–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ", "–ö–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–æ AI", "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –í—Ä—É—á–Ω—É"],
        x=[total_opportunities, len(ai_qualified_df), len(manual_approved_df)],
        textposition="inside", textinfo="value+percent initial",
        marker={"color": ["#004c99", "#0080ff", "#80c1ff"]}
    ))
    fig_funnel.update_layout(title_text="–í–æ—Ä–æ–Ω–∫–∞ –ö–æ–Ω–≤–µ—Ä—Å—ñ—ó –ú–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π")

    left_col, right_col = st.columns([2, 1])
    with left_col:
        st.plotly_chart(fig_funnel, use_container_width=True)
    with right_col:
        st.subheader("–ö–ª—é—á–æ–≤—ñ –ü–æ–∫–∞–∑–Ω–∏–∫–∏ (KPIs)")
        conv_ai = (len(ai_qualified_df) / total_opportunities) * 100 if total_opportunities > 0 else 0
        conv_manual = (len(manual_approved_df) / len(ai_qualified_df)) * 100 if len(ai_qualified_df) > 0 else 0

        st.metric(label="–ö-—Å—Ç—å –º–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π —É –ø–µ—Ä—ñ–æ–¥—ñ", value=total_opportunities)
        st.metric(label="–ö–æ–Ω–≤–µ—Ä—Å—ñ—è –≤ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω—ñ (AI)", value=f"{conv_ai:.1f}%")
        st.metric(label="–ö–æ–Ω–≤–µ—Ä—Å—ñ—è –≤ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω—ñ (Manual)", value=f"{conv_manual:.1f}%",
                  help="–í—ñ–¥—Å–æ—Ç–æ–∫ –≤—ñ–¥ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏—Ö AI, —è–∫—ñ –±—É–ª–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω—ñ –≤—Ä—É—á–Ω—É.")