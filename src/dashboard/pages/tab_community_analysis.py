# src/dashboard/pages/tab_community_analysis.py

import streamlit as st
from ..constants import AI_QUALIFIED_STATUSES # <-- –ù–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç
from ..plotting import create_bar_chart # <-- –ù–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç

def display_tab(df):
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤–∫–ª–∞–¥–∫—É –∞–Ω–∞–ª—ñ–∑—É —Å–ø—ñ–ª—å–Ω–æ—Ç–∏ —Ç–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤."""
    st.header("üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ê–Ω–∞–ª—ñ–∑ –°–ø—ñ–ª—å–Ω–æ—Ç–∏ —Ç–∞ –î–∂–µ—Ä–µ–ª")

    qualified_df = df[df['ai_status'].isin(AI_QUALIFIED_STATUSES)].copy()
    if qualified_df.empty:
        st.info("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏—Ö –ª—ñ–¥—ñ–≤ –∑–∞ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.")
        return

    col1, col2, col3 = st.columns(3)
    with col1:
        st.subheader("–¢–æ–ø –°–µ—Ä–≤–µ—Ä–∏")
        create_bar_chart(qualified_df, x_col='count', y_col='server_name', title="–¢–æ–ø-10 —Å–µ—Ä–≤–µ—Ä—ñ–≤",
                         x_label="–ö-—Å—Ç—å –ª—ñ–¥—ñ–≤", y_label="–°–µ—Ä–≤–µ—Ä")
    with col2:
        st.subheader("–¢–æ–ø –ö–∞–Ω–∞–ª–∏")
        qualified_df['full_channel_name'] = qualified_df['server_name'] + " > " + qualified_df['channel_name']
        create_bar_chart(qualified_df, x_col='count', y_col='full_channel_name', title="–¢–æ–ø-10 –∫–∞–Ω–∞–ª—ñ–≤",
                         x_label="–ö-—Å—Ç—å –ª—ñ–¥—ñ–≤", y_label="–ö–∞–Ω–∞–ª")
    with col3:
        st.subheader("–¢–æ–ø –ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∏ –õ—ñ–¥—ñ–≤")
        create_bar_chart(qualified_df, x_col='count', y_col='author_name', title="–¢–æ–ø-10 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤",
                         x_label="–ö-—Å—Ç—å –ª—ñ–¥—ñ–≤", y_label="–ê–≤—Ç–æ—Ä")