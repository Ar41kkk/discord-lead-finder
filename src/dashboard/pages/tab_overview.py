# src/dashboard/pages/tab_overview.py

import streamlit as st
from ..constants import AI_QUALIFIED_STATUSES

def display_tab(df):
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≥–æ–ª–æ–≤–Ω—É –≤–∫–ª–∞–¥–∫—É –∑ –∫–ª—é—á–æ–≤–∏–º–∏ –ø–æ–∫–∞–∑–Ω–∏–∫–∞–º–∏."""
    st.header("üìä –ì–æ–ª–æ–≤–Ω—ñ –ü–æ–∫–∞–∑–Ω–∏–∫–∏ (Overview)")

    # –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –∫–ª—é—á–æ–≤—ñ –º–µ—Ç—Ä–∏–∫–∏
    total_opportunities = len(df)
    ai_qualified_df = df[df['ai_status'].isin(AI_QUALIFIED_STATUSES)]
    manual_approved_count = len(df[df['manual_status'] == 'approved'])

    # –ö–æ–Ω–≤–µ—Ä—Å—ñ—è
    ai_conversion_rate = (len(ai_qualified_df) / total_opportunities) * 100 if total_opportunities > 0 else 0

    # –¢–æ–ø-3 –∫–ª—é—á–æ–≤–∏—Ö —Å–ª–æ–≤–∞
    top_keywords = df.dropna(subset=['keyword_trigger'])['keyword_trigger'].value_counts().nlargest(3)

    # –†–æ–∑–º—ñ—â—É—î–º–æ –º–µ—Ç—Ä–∏–∫–∏ –≤ –∫–æ–ª–æ–Ω–∫–∞—Ö
    col1, col2, col3 = st.columns(3)

    with col1:
        st.metric(label="–í—Å—å–æ–≥–æ –ú–æ–∂–ª–∏–≤–æ—Å—Ç–µ–π", value=f"{total_opportunities}")

    with col2:
        st.metric(label="–ö–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–æ AI", value=f"{len(ai_qualified_df)}")
        st.metric(label="–ö–æ–Ω–≤–µ—Ä—Å—ñ—è AI", value=f"{ai_conversion_rate:.1f}%")

    with col3:
        st.metric(label="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –í—Ä—É—á–Ω—É", value=f"{manual_approved_count}")

    st.markdown("---")

    # –í–∏–≤–æ–¥–∏–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—É –∫–æ—Ä–∏—Å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
    st.subheader("–ù–∞–π–ø–æ–ø—É–ª—è—Ä–Ω—ñ—à—ñ –ö–ª—é—á–æ–≤—ñ –°–ª–æ–≤–∞")
    if not top_keywords.empty:
        st.table(top_keywords)
    else:
        st.info("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–∞–Ω–∏—Ö –ø–æ –∫–ª—é—á–æ–≤–∏—Ö —Å–ª–æ–≤–∞—Ö.")