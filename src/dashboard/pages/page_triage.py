# src/dashboard/pages/page_triage.py

import streamlit as st
from streamlit_autorefresh import st_autorefresh
from .triage_views import view_deck, view_list
from ..constants import AI_QUALIFIED_STATUSES  # ‚Üê –ª–∏—à–∞—î–º–æ —Ç—ñ–ª—å–∫–∏ —Ü—é –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É
import pandas as pd

def display_page(df):
    """–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è, —Ä–æ—É—Ç–µ—Ä –º—ñ–∂ —Ä–µ–∂–∏–º–∞–º–∏, –∑ —Ñ—ñ–ª—å—Ç—Ä–æ–º Stage1/Stage2."""

    st_autorefresh(interval=30_000, key="triage_reloader")
    st.header("üì¨ –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –ù–æ–≤–∏—Ö –õ—ñ–¥—ñ–≤", divider='rainbow')

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å—Ç–∞–Ω
    if 'triage_mode' not in st.session_state:
        st.session_state.triage_mode = "üóÇÔ∏è –ö–æ–ª–æ–¥–∞"
    if 'triage_stage' not in st.session_state:
        st.session_state.triage_stage = "–ï—Ç–∞–ø 2"

    # –ù–µ—Ä–æ–∑–≥–ª—è–Ω—É—Ç—ñ (manual_status == 'n/a', –Ω–µ—á—É—Ç–ª–∏–≤–æ –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É)
    manual = df.get('manual_status', pd.Series(dtype=str)).astype(str).str.lower()
    unreviewed_all = df[manual.eq('n/a')].copy()

    # –†–∞–¥—ñ–æ-–ø–µ—Ä–µ–º–∏–∫–∞—á –µ—Ç–∞–ø—ñ–≤
    st.radio(
        "–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ª—ñ–¥–∏, —â–æ –ø—Ä–æ–π—à–ª–∏:",
        ["–ï—Ç–∞–ø 1", "–ï—Ç–∞–ø 2"],
        key="triage_stage",
        horizontal=True
    )

    # –ú–∞—Å–∫–∞ –¥–ª—è Stage 1: —É—Å–µ, —â–æ –ù–ï 'UNRELEVANT' (—è–∫ —É —Ç–≤–æ—ó–π –≤–æ—Ä–æ–Ω—Ü—ñ)
    if 'ai_stage_one_status' in unreviewed_all.columns:
        s1_series = unreviewed_all['ai_stage_one_status'].astype(str).str.upper()
        s1_mask = s1_series.ne('UNRELEVANT')
    else:
        # –Ø–∫—â–æ –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ–º–∞, –ø—ñ–¥—Å—Ç—Ä–∞—Ö—É—î–º–æ—Å—å: –≤–≤–∞–∂–∞—Ç–∏ Stage1 –ø—Ä–æ–π–¥–µ–Ω–∏–º —è–∫—â–æ —î keyword_trigger
        s1_mask = unreviewed_all.get('keyword_trigger', pd.Series(index=unreviewed_all.index)).notna()

    # –ú–∞—Å–∫–∞ –¥–ª—è Stage 2: —Å—Ç–∞—Ç—É—Å ‚àà AI_QUALIFIED_STATUSES
    if 'ai_stage_two_status' in unreviewed_all.columns:
        s2_mask = unreviewed_all['ai_stage_two_status'].isin(AI_QUALIFIED_STATUSES)
    else:
        # –Ø–∫—â–æ –∫–æ–ª–æ–Ω–∫–∏ –Ω–µ–º–∞ ‚Äî Stage2 –Ω—ñ—Ö—Ç–æ –Ω–µ –ø—Ä–æ–π—à–æ–≤
        s2_mask = pd.Series(False, index=unreviewed_all.index)

    # –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –≤–∏–±—ñ—Ä –µ—Ç–∞–ø—É
    if st.session_state.triage_stage == "–ï—Ç–∞–ø 1":
        unreviewed = unreviewed_all[s1_mask]
    else:
        unreviewed = unreviewed_all[s2_mask]

    # --- –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è: message_timestamp ‚Üí created_at ‚Üí id ---
    sort_done = False
    if 'message_timestamp' in unreviewed.columns:
        ts = pd.to_datetime(unreviewed['message_timestamp'], errors='coerce', utc=True)
        unreviewed = unreviewed.assign(_ts=ts).sort_values('_ts', ascending=False).drop(columns=['_ts'])
        sort_done = True
    elif 'created_at' in unreviewed.columns:
        ts = pd.to_datetime(unreviewed['created_at'], errors='coerce', utc=True)
        unreviewed = unreviewed.assign(_ts=ts).sort_values('_ts', ascending=False).drop(columns=['_ts'])
        sort_done = True
    elif 'id' in unreviewed.columns:
        unreviewed = unreviewed.sort_values('id', ascending=False)
        sort_done = True

    if not sort_done:
        st.warning("‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è ('message_timestamp' / 'created_at' / 'id'). –ü–æ–∫–∞–∑—É—î–º–æ —è–∫ —î.")

    # –ü–æ—Ä–æ–∂–Ω—ñ —Å—Ç–∞–Ω–∏
    if unreviewed.empty:
        st.info("–ó–∞ –æ–±—Ä–∞–Ω–∏–π –µ—Ç–∞–ø –Ω–µ–º–∞—î –Ω–µ—Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏—Ö –ª—ñ–¥—ñ–≤.")
        return

    # –ü—Ä–æ–≥—Ä–µ—Å: total –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –µ—Ç–∞–ø—É
    if st.session_state.triage_stage == "–ï—Ç–∞–ø 1":
        total = len(unreviewed_all[s1_mask])
    else:
        total = len(unreviewed_all[s2_mask])

    left = len(unreviewed)  # –∑–∞–ª–∏—à–æ–∫ —É –ø–æ—Ç–æ—á–Ω–æ–º—É –µ—Ç–∞–ø—ñ
    done = max(0, total - left)
    percent = (done / total) if total else 0.0
    st.progress(percent, text=f"–í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ {done} –∑ {total} (–∑–∞–ª–∏—à–∏–ª–æ—Å—å {left})")

    # –†–µ–∂–∏–º –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    st.radio(
        "–†–µ–∂–∏–º —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è:",
        ["üóÇÔ∏è –ö–æ–ª–æ–¥–∞", "üìã –°–ø–∏—Å–æ–∫"],
        key='triage_mode',
        horizontal=True,
        label_visibility="collapsed"
    )

    # –†–µ–Ω–¥–µ—Ä
    if st.session_state.triage_mode == "üóÇÔ∏è –ö–æ–ª–æ–¥–∞":
        view_deck.display_view(unreviewed)
    else:
        view_list.display_view(unreviewed)
