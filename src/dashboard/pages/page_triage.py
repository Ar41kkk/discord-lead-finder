# src/dashboard/pages/page_triage.py

import streamlit as st
from streamlit_autorefresh import st_autorefresh
from .triage_views import view_deck, view_list
from ..constants import AI_QUALIFIED_STATUSES  # <-- –ù–æ–≤–∏–π —ñ–º–ø–æ—Ä—Ç


def display_page(df, db_path):
    """–ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è, —è–∫–∞ –≤–∏—Å—Ç—É–ø–∞—î –≤ —Ä–æ–ª—ñ —Ä–æ—É—Ç–µ—Ä–∞."""

    st_autorefresh(interval=30000, key="triage_reloader")
    st.header("üì¨ –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –ù–æ–≤–∏—Ö –õ—ñ–¥—ñ–≤", divider='rainbow')

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Å—Ç–∞–Ω—É –≤ —Å–µ—Å—ñ—ó
    if 'triage_mode' not in st.session_state:
        st.session_state.triage_mode = "üóÇÔ∏è –ö–æ–ª–æ–¥–∞"
    if 'last_action' not in st.session_state:
        st.session_state.last_action = None
    if 'show_only_qualified' not in st.session_state:
        st.session_state.show_only_qualified = False  # –°—Ç–∞–Ω –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≥–ª–µ—Ä–∞

    unreviewed_df_all = df[df['manual_status'] == 'n/a'].copy()

    # --- –ù–û–í–ò–ô –§–Ü–õ–¨–¢–†-–¢–û–ì–õ–ï–† ---
    st.toggle(
        "–ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ª–∏—à–µ —è–∫—ñ—Å–Ω—ñ –ª—ñ–¥–∏ (AI)",
        key='show_only_qualified',
        help="–ü–æ–∫–∞–∑—É—î –ª–∏—à–µ –ª—ñ–¥–∏ –∑—ñ —Å—Ç–∞—Ç—É—Å–æ–º RELEVANT –∞–±–æ POSSIBLY_RELEVANT."
    )

    if st.session_state.show_only_qualified:
        unreviewed_df = unreviewed_df_all[unreviewed_df_all['ai_status'].isin(AI_QUALIFIED_STATUSES)]
    else:
        unreviewed_df = unreviewed_df_all

    unreviewed_df = unreviewed_df.sort_values(by='message_timestamp', ascending=False)

    if unreviewed_df.empty:
        if st.session_state.show_only_qualified and not unreviewed_df_all.empty:
            st.info("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —è–∫—ñ—Å–Ω–∏—Ö –ª—ñ–¥—ñ–≤ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è. –í–∏–º–∫–Ω—ñ—Ç—å —Ñ—ñ–ª—å—Ç—Ä, —â–æ–± –ø–æ–±–∞—á–∏—Ç–∏ –≤—Å—ñ.")
        else:
            st.success("üéâ –í—Å—ñ –ª—ñ–¥–∏ –≤—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ! –û—á—ñ–∫—É—î–º–æ –Ω–∞ –Ω–æ–≤—ñ...")

        if st.session_state.get('last_action'):
            # ... (–º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
            pass
        return

    # –ü—Ä–æ–≥—Ä–µ—Å-–±–∞—Ä —Ç–∞ —ñ–Ω—à–∞ —Å–ø—ñ–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
    total_unreviewed = len(unreviewed_df)
    total_leads = len(df)
    reviewed_leads = total_leads - len(unreviewed_df_all)
    progress_percent = (reviewed_leads / total_leads) * 100 if total_leads > 0 else 0
    st.progress(progress_percent / 100,
                text=f"–í—ñ–¥—Å–æ—Ä—Ç–æ–≤–∞–Ω–æ {reviewed_leads} –∑ {total_leads} –ª—ñ–¥—ñ–≤ ({total_unreviewed} –∑–∞–ª–∏—à–∏–ª–æ—Å—å –ø–æ–∫–∞–∑–∞—Ç–∏)")

    # –†–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Ä–µ–∂–∏–º—É, —â–æ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å —Å–≤—ñ–π —Å—Ç–∞–Ω
    st.radio(
        "–û–±–µ—Ä—ñ—Ç—å —Ä–µ–∂–∏–º —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è:",
        ["üóÇÔ∏è –ö–æ–ª–æ–¥–∞", "üìã –°–ø–∏—Å–æ–∫"],
        key='triage_mode',  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤–∏–±—ñ—Ä –≤ session_state
        horizontal=True,
        label_visibility="collapsed"
    )

    # –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –æ–±—Ä–∞–Ω–∏–π —Ä–µ–∂–∏–º
    if st.session_state.triage_mode == "üóÇÔ∏è –ö–æ–ª–æ–¥–∞":
        view_deck.display_view(unreviewed_df, db_path)

    elif st.session_state.triage_mode == "üìã –°–ø–∏—Å–æ–∫":
        view_list.display_view(unreviewed_df, db_path)
